/*
 * Paasta API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package paastaapi

import (
	"encoding/json"
)

// InstanceStatusKubernetes struct for InstanceStatusKubernetes
type InstanceStatusKubernetes struct {
	// The number of different running versions of the same service (0 for stopped, 1 for running and 1+ for bouncing)
	AppCount int32 `json:"app_count"`
	// ID of the desired version of a service instance
	AppId *string `json:"app_id,omitempty"`
	AutoscalingStatus *InstanceStatusKubernetesAutoscalingStatus `json:"autoscaling_status,omitempty"`
	// backoff in seconds before launching the next task
	BackoffSeconds *int32 `json:"backoff_seconds,omitempty"`
	// Method to transit between new and old versions of a service
	BounceMethod string `json:"bounce_method"`
	// Unix timestamp when this app was created
	CreateTimestamp *float32 `json:"create_timestamp,omitempty"`
	// Deploy status of a Kubernetes service
	DeployStatus *string `json:"deploy_status,omitempty"`
	// Reason for the deploy status
	DeployStatusMessage *string `json:"deploy_status_message,omitempty"`
	// Desired state of a service, for Kubernetes
	DesiredState string `json:"desired_state"`
	// Error message when a kubernetes object (Deployment/Statefulset) cannot be found
	ErrorMessage *string `json:"error_message,omitempty"`
	// The number of desired instances of the service
	ExpectedInstanceCount *int32 `json:"expected_instance_count,omitempty"`
	// The namespace this app is running
	Namespace *string `json:"namespace,omitempty"`
	// Pods associated to this app
	Pods *[]KubernetesPod `json:"pods,omitempty"`
	// ReplicaSets associated to this app
	Replicasets *[]KubernetesReplicaSet `json:"replicasets,omitempty"`
	// The number of actual running instances of the service
	RunningInstanceCount *int32 `json:"running_instance_count,omitempty"`
	Smartstack *SmartstackStatus `json:"smartstack,omitempty"`
}

// NewInstanceStatusKubernetes instantiates a new InstanceStatusKubernetes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceStatusKubernetes(appCount int32, bounceMethod string, desiredState string, ) *InstanceStatusKubernetes {
	this := InstanceStatusKubernetes{}
	this.AppCount = appCount
	this.BounceMethod = bounceMethod
	this.DesiredState = desiredState
	return &this
}

// NewInstanceStatusKubernetesWithDefaults instantiates a new InstanceStatusKubernetes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceStatusKubernetesWithDefaults() *InstanceStatusKubernetes {
	this := InstanceStatusKubernetes{}
	return &this
}

// GetAppCount returns the AppCount field value
func (o *InstanceStatusKubernetes) GetAppCount() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.AppCount
}

// GetAppCountOk returns a tuple with the AppCount field value
// and a boolean to check if the value has been set.
func (o *InstanceStatusKubernetes) GetAppCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AppCount, true
}

// SetAppCount sets field value
func (o *InstanceStatusKubernetes) SetAppCount(v int32) {
	o.AppCount = v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *InstanceStatusKubernetes) GetAppId() string {
	if o == nil || o.AppId == nil {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceStatusKubernetes) GetAppIdOk() (*string, bool) {
	if o == nil || o.AppId == nil {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *InstanceStatusKubernetes) HasAppId() bool {
	if o != nil && o.AppId != nil {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *InstanceStatusKubernetes) SetAppId(v string) {
	o.AppId = &v
}

// GetAutoscalingStatus returns the AutoscalingStatus field value if set, zero value otherwise.
func (o *InstanceStatusKubernetes) GetAutoscalingStatus() InstanceStatusKubernetesAutoscalingStatus {
	if o == nil || o.AutoscalingStatus == nil {
		var ret InstanceStatusKubernetesAutoscalingStatus
		return ret
	}
	return *o.AutoscalingStatus
}

// GetAutoscalingStatusOk returns a tuple with the AutoscalingStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceStatusKubernetes) GetAutoscalingStatusOk() (*InstanceStatusKubernetesAutoscalingStatus, bool) {
	if o == nil || o.AutoscalingStatus == nil {
		return nil, false
	}
	return o.AutoscalingStatus, true
}

// HasAutoscalingStatus returns a boolean if a field has been set.
func (o *InstanceStatusKubernetes) HasAutoscalingStatus() bool {
	if o != nil && o.AutoscalingStatus != nil {
		return true
	}

	return false
}

// SetAutoscalingStatus gets a reference to the given InstanceStatusKubernetesAutoscalingStatus and assigns it to the AutoscalingStatus field.
func (o *InstanceStatusKubernetes) SetAutoscalingStatus(v InstanceStatusKubernetesAutoscalingStatus) {
	o.AutoscalingStatus = &v
}

// GetBackoffSeconds returns the BackoffSeconds field value if set, zero value otherwise.
func (o *InstanceStatusKubernetes) GetBackoffSeconds() int32 {
	if o == nil || o.BackoffSeconds == nil {
		var ret int32
		return ret
	}
	return *o.BackoffSeconds
}

// GetBackoffSecondsOk returns a tuple with the BackoffSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceStatusKubernetes) GetBackoffSecondsOk() (*int32, bool) {
	if o == nil || o.BackoffSeconds == nil {
		return nil, false
	}
	return o.BackoffSeconds, true
}

// HasBackoffSeconds returns a boolean if a field has been set.
func (o *InstanceStatusKubernetes) HasBackoffSeconds() bool {
	if o != nil && o.BackoffSeconds != nil {
		return true
	}

	return false
}

// SetBackoffSeconds gets a reference to the given int32 and assigns it to the BackoffSeconds field.
func (o *InstanceStatusKubernetes) SetBackoffSeconds(v int32) {
	o.BackoffSeconds = &v
}

// GetBounceMethod returns the BounceMethod field value
func (o *InstanceStatusKubernetes) GetBounceMethod() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.BounceMethod
}

// GetBounceMethodOk returns a tuple with the BounceMethod field value
// and a boolean to check if the value has been set.
func (o *InstanceStatusKubernetes) GetBounceMethodOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BounceMethod, true
}

// SetBounceMethod sets field value
func (o *InstanceStatusKubernetes) SetBounceMethod(v string) {
	o.BounceMethod = v
}

// GetCreateTimestamp returns the CreateTimestamp field value if set, zero value otherwise.
func (o *InstanceStatusKubernetes) GetCreateTimestamp() float32 {
	if o == nil || o.CreateTimestamp == nil {
		var ret float32
		return ret
	}
	return *o.CreateTimestamp
}

// GetCreateTimestampOk returns a tuple with the CreateTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceStatusKubernetes) GetCreateTimestampOk() (*float32, bool) {
	if o == nil || o.CreateTimestamp == nil {
		return nil, false
	}
	return o.CreateTimestamp, true
}

// HasCreateTimestamp returns a boolean if a field has been set.
func (o *InstanceStatusKubernetes) HasCreateTimestamp() bool {
	if o != nil && o.CreateTimestamp != nil {
		return true
	}

	return false
}

// SetCreateTimestamp gets a reference to the given float32 and assigns it to the CreateTimestamp field.
func (o *InstanceStatusKubernetes) SetCreateTimestamp(v float32) {
	o.CreateTimestamp = &v
}

// GetDeployStatus returns the DeployStatus field value if set, zero value otherwise.
func (o *InstanceStatusKubernetes) GetDeployStatus() string {
	if o == nil || o.DeployStatus == nil {
		var ret string
		return ret
	}
	return *o.DeployStatus
}

// GetDeployStatusOk returns a tuple with the DeployStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceStatusKubernetes) GetDeployStatusOk() (*string, bool) {
	if o == nil || o.DeployStatus == nil {
		return nil, false
	}
	return o.DeployStatus, true
}

// HasDeployStatus returns a boolean if a field has been set.
func (o *InstanceStatusKubernetes) HasDeployStatus() bool {
	if o != nil && o.DeployStatus != nil {
		return true
	}

	return false
}

// SetDeployStatus gets a reference to the given string and assigns it to the DeployStatus field.
func (o *InstanceStatusKubernetes) SetDeployStatus(v string) {
	o.DeployStatus = &v
}

// GetDeployStatusMessage returns the DeployStatusMessage field value if set, zero value otherwise.
func (o *InstanceStatusKubernetes) GetDeployStatusMessage() string {
	if o == nil || o.DeployStatusMessage == nil {
		var ret string
		return ret
	}
	return *o.DeployStatusMessage
}

// GetDeployStatusMessageOk returns a tuple with the DeployStatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceStatusKubernetes) GetDeployStatusMessageOk() (*string, bool) {
	if o == nil || o.DeployStatusMessage == nil {
		return nil, false
	}
	return o.DeployStatusMessage, true
}

// HasDeployStatusMessage returns a boolean if a field has been set.
func (o *InstanceStatusKubernetes) HasDeployStatusMessage() bool {
	if o != nil && o.DeployStatusMessage != nil {
		return true
	}

	return false
}

// SetDeployStatusMessage gets a reference to the given string and assigns it to the DeployStatusMessage field.
func (o *InstanceStatusKubernetes) SetDeployStatusMessage(v string) {
	o.DeployStatusMessage = &v
}

// GetDesiredState returns the DesiredState field value
func (o *InstanceStatusKubernetes) GetDesiredState() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DesiredState
}

// GetDesiredStateOk returns a tuple with the DesiredState field value
// and a boolean to check if the value has been set.
func (o *InstanceStatusKubernetes) GetDesiredStateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DesiredState, true
}

// SetDesiredState sets field value
func (o *InstanceStatusKubernetes) SetDesiredState(v string) {
	o.DesiredState = v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *InstanceStatusKubernetes) GetErrorMessage() string {
	if o == nil || o.ErrorMessage == nil {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceStatusKubernetes) GetErrorMessageOk() (*string, bool) {
	if o == nil || o.ErrorMessage == nil {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *InstanceStatusKubernetes) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage != nil {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *InstanceStatusKubernetes) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetExpectedInstanceCount returns the ExpectedInstanceCount field value if set, zero value otherwise.
func (o *InstanceStatusKubernetes) GetExpectedInstanceCount() int32 {
	if o == nil || o.ExpectedInstanceCount == nil {
		var ret int32
		return ret
	}
	return *o.ExpectedInstanceCount
}

// GetExpectedInstanceCountOk returns a tuple with the ExpectedInstanceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceStatusKubernetes) GetExpectedInstanceCountOk() (*int32, bool) {
	if o == nil || o.ExpectedInstanceCount == nil {
		return nil, false
	}
	return o.ExpectedInstanceCount, true
}

// HasExpectedInstanceCount returns a boolean if a field has been set.
func (o *InstanceStatusKubernetes) HasExpectedInstanceCount() bool {
	if o != nil && o.ExpectedInstanceCount != nil {
		return true
	}

	return false
}

// SetExpectedInstanceCount gets a reference to the given int32 and assigns it to the ExpectedInstanceCount field.
func (o *InstanceStatusKubernetes) SetExpectedInstanceCount(v int32) {
	o.ExpectedInstanceCount = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *InstanceStatusKubernetes) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceStatusKubernetes) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *InstanceStatusKubernetes) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *InstanceStatusKubernetes) SetNamespace(v string) {
	o.Namespace = &v
}

// GetPods returns the Pods field value if set, zero value otherwise.
func (o *InstanceStatusKubernetes) GetPods() []KubernetesPod {
	if o == nil || o.Pods == nil {
		var ret []KubernetesPod
		return ret
	}
	return *o.Pods
}

// GetPodsOk returns a tuple with the Pods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceStatusKubernetes) GetPodsOk() (*[]KubernetesPod, bool) {
	if o == nil || o.Pods == nil {
		return nil, false
	}
	return o.Pods, true
}

// HasPods returns a boolean if a field has been set.
func (o *InstanceStatusKubernetes) HasPods() bool {
	if o != nil && o.Pods != nil {
		return true
	}

	return false
}

// SetPods gets a reference to the given []KubernetesPod and assigns it to the Pods field.
func (o *InstanceStatusKubernetes) SetPods(v []KubernetesPod) {
	o.Pods = &v
}

// GetReplicasets returns the Replicasets field value if set, zero value otherwise.
func (o *InstanceStatusKubernetes) GetReplicasets() []KubernetesReplicaSet {
	if o == nil || o.Replicasets == nil {
		var ret []KubernetesReplicaSet
		return ret
	}
	return *o.Replicasets
}

// GetReplicasetsOk returns a tuple with the Replicasets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceStatusKubernetes) GetReplicasetsOk() (*[]KubernetesReplicaSet, bool) {
	if o == nil || o.Replicasets == nil {
		return nil, false
	}
	return o.Replicasets, true
}

// HasReplicasets returns a boolean if a field has been set.
func (o *InstanceStatusKubernetes) HasReplicasets() bool {
	if o != nil && o.Replicasets != nil {
		return true
	}

	return false
}

// SetReplicasets gets a reference to the given []KubernetesReplicaSet and assigns it to the Replicasets field.
func (o *InstanceStatusKubernetes) SetReplicasets(v []KubernetesReplicaSet) {
	o.Replicasets = &v
}

// GetRunningInstanceCount returns the RunningInstanceCount field value if set, zero value otherwise.
func (o *InstanceStatusKubernetes) GetRunningInstanceCount() int32 {
	if o == nil || o.RunningInstanceCount == nil {
		var ret int32
		return ret
	}
	return *o.RunningInstanceCount
}

// GetRunningInstanceCountOk returns a tuple with the RunningInstanceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceStatusKubernetes) GetRunningInstanceCountOk() (*int32, bool) {
	if o == nil || o.RunningInstanceCount == nil {
		return nil, false
	}
	return o.RunningInstanceCount, true
}

// HasRunningInstanceCount returns a boolean if a field has been set.
func (o *InstanceStatusKubernetes) HasRunningInstanceCount() bool {
	if o != nil && o.RunningInstanceCount != nil {
		return true
	}

	return false
}

// SetRunningInstanceCount gets a reference to the given int32 and assigns it to the RunningInstanceCount field.
func (o *InstanceStatusKubernetes) SetRunningInstanceCount(v int32) {
	o.RunningInstanceCount = &v
}

// GetSmartstack returns the Smartstack field value if set, zero value otherwise.
func (o *InstanceStatusKubernetes) GetSmartstack() SmartstackStatus {
	if o == nil || o.Smartstack == nil {
		var ret SmartstackStatus
		return ret
	}
	return *o.Smartstack
}

// GetSmartstackOk returns a tuple with the Smartstack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceStatusKubernetes) GetSmartstackOk() (*SmartstackStatus, bool) {
	if o == nil || o.Smartstack == nil {
		return nil, false
	}
	return o.Smartstack, true
}

// HasSmartstack returns a boolean if a field has been set.
func (o *InstanceStatusKubernetes) HasSmartstack() bool {
	if o != nil && o.Smartstack != nil {
		return true
	}

	return false
}

// SetSmartstack gets a reference to the given SmartstackStatus and assigns it to the Smartstack field.
func (o *InstanceStatusKubernetes) SetSmartstack(v SmartstackStatus) {
	o.Smartstack = &v
}

func (o InstanceStatusKubernetes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["app_count"] = o.AppCount
	}
	if o.AppId != nil {
		toSerialize["app_id"] = o.AppId
	}
	if o.AutoscalingStatus != nil {
		toSerialize["autoscaling_status"] = o.AutoscalingStatus
	}
	if o.BackoffSeconds != nil {
		toSerialize["backoff_seconds"] = o.BackoffSeconds
	}
	if true {
		toSerialize["bounce_method"] = o.BounceMethod
	}
	if o.CreateTimestamp != nil {
		toSerialize["create_timestamp"] = o.CreateTimestamp
	}
	if o.DeployStatus != nil {
		toSerialize["deploy_status"] = o.DeployStatus
	}
	if o.DeployStatusMessage != nil {
		toSerialize["deploy_status_message"] = o.DeployStatusMessage
	}
	if true {
		toSerialize["desired_state"] = o.DesiredState
	}
	if o.ErrorMessage != nil {
		toSerialize["error_message"] = o.ErrorMessage
	}
	if o.ExpectedInstanceCount != nil {
		toSerialize["expected_instance_count"] = o.ExpectedInstanceCount
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.Pods != nil {
		toSerialize["pods"] = o.Pods
	}
	if o.Replicasets != nil {
		toSerialize["replicasets"] = o.Replicasets
	}
	if o.RunningInstanceCount != nil {
		toSerialize["running_instance_count"] = o.RunningInstanceCount
	}
	if o.Smartstack != nil {
		toSerialize["smartstack"] = o.Smartstack
	}
	return json.Marshal(toSerialize)
}

type NullableInstanceStatusKubernetes struct {
	value *InstanceStatusKubernetes
	isSet bool
}

func (v NullableInstanceStatusKubernetes) Get() *InstanceStatusKubernetes {
	return v.value
}

func (v *NullableInstanceStatusKubernetes) Set(val *InstanceStatusKubernetes) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceStatusKubernetes) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceStatusKubernetes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceStatusKubernetes(val *InstanceStatusKubernetes) *NullableInstanceStatusKubernetes {
	return &NullableInstanceStatusKubernetes{value: val, isSet: true}
}

func (v NullableInstanceStatusKubernetes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceStatusKubernetes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


