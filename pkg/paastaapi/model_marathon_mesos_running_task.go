/*
 * Paasta API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paastaapi

import (
	"encoding/json"
)

// MarathonMesosRunningTask struct for MarathonMesosRunningTask
type MarathonMesosRunningTask struct {
	CpuShares *FloatAndError `json:"cpu_shares,omitempty"`
	CpuUsedSeconds *FloatAndError `json:"cpu_used_seconds,omitempty"`
	// The unix timestamp at which the task was deployed
	DeployedTimestamp *float32 `json:"deployed_timestamp,omitempty"`
	// The duration over which the task has been running in seconds
	DurationSeconds *int32 `json:"duration_seconds,omitempty"`
	// Name of the Mesos agent on which this task is running
	Hostname *string `json:"hostname,omitempty"`
	// The ID of the task in Mesos
	Id *string `json:"id,omitempty"`
	MemLimit *IntegerAndError `json:"mem_limit,omitempty"`
	Rss *IntegerAndError `json:"rss,omitempty"`
	TailLines *TaskTailLines `json:"tail_lines,omitempty"`
}

// NewMarathonMesosRunningTask instantiates a new MarathonMesosRunningTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarathonMesosRunningTask() *MarathonMesosRunningTask {
	this := MarathonMesosRunningTask{}
	return &this
}

// NewMarathonMesosRunningTaskWithDefaults instantiates a new MarathonMesosRunningTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarathonMesosRunningTaskWithDefaults() *MarathonMesosRunningTask {
	this := MarathonMesosRunningTask{}
	return &this
}

// GetCpuShares returns the CpuShares field value if set, zero value otherwise.
func (o *MarathonMesosRunningTask) GetCpuShares() FloatAndError {
	if o == nil || o.CpuShares == nil {
		var ret FloatAndError
		return ret
	}
	return *o.CpuShares
}

// GetCpuSharesOk returns a tuple with the CpuShares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarathonMesosRunningTask) GetCpuSharesOk() (*FloatAndError, bool) {
	if o == nil || o.CpuShares == nil {
		return nil, false
	}
	return o.CpuShares, true
}

// HasCpuShares returns a boolean if a field has been set.
func (o *MarathonMesosRunningTask) HasCpuShares() bool {
	if o != nil && o.CpuShares != nil {
		return true
	}

	return false
}

// SetCpuShares gets a reference to the given FloatAndError and assigns it to the CpuShares field.
func (o *MarathonMesosRunningTask) SetCpuShares(v FloatAndError) {
	o.CpuShares = &v
}

// GetCpuUsedSeconds returns the CpuUsedSeconds field value if set, zero value otherwise.
func (o *MarathonMesosRunningTask) GetCpuUsedSeconds() FloatAndError {
	if o == nil || o.CpuUsedSeconds == nil {
		var ret FloatAndError
		return ret
	}
	return *o.CpuUsedSeconds
}

// GetCpuUsedSecondsOk returns a tuple with the CpuUsedSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarathonMesosRunningTask) GetCpuUsedSecondsOk() (*FloatAndError, bool) {
	if o == nil || o.CpuUsedSeconds == nil {
		return nil, false
	}
	return o.CpuUsedSeconds, true
}

// HasCpuUsedSeconds returns a boolean if a field has been set.
func (o *MarathonMesosRunningTask) HasCpuUsedSeconds() bool {
	if o != nil && o.CpuUsedSeconds != nil {
		return true
	}

	return false
}

// SetCpuUsedSeconds gets a reference to the given FloatAndError and assigns it to the CpuUsedSeconds field.
func (o *MarathonMesosRunningTask) SetCpuUsedSeconds(v FloatAndError) {
	o.CpuUsedSeconds = &v
}

// GetDeployedTimestamp returns the DeployedTimestamp field value if set, zero value otherwise.
func (o *MarathonMesosRunningTask) GetDeployedTimestamp() float32 {
	if o == nil || o.DeployedTimestamp == nil {
		var ret float32
		return ret
	}
	return *o.DeployedTimestamp
}

// GetDeployedTimestampOk returns a tuple with the DeployedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarathonMesosRunningTask) GetDeployedTimestampOk() (*float32, bool) {
	if o == nil || o.DeployedTimestamp == nil {
		return nil, false
	}
	return o.DeployedTimestamp, true
}

// HasDeployedTimestamp returns a boolean if a field has been set.
func (o *MarathonMesosRunningTask) HasDeployedTimestamp() bool {
	if o != nil && o.DeployedTimestamp != nil {
		return true
	}

	return false
}

// SetDeployedTimestamp gets a reference to the given float32 and assigns it to the DeployedTimestamp field.
func (o *MarathonMesosRunningTask) SetDeployedTimestamp(v float32) {
	o.DeployedTimestamp = &v
}

// GetDurationSeconds returns the DurationSeconds field value if set, zero value otherwise.
func (o *MarathonMesosRunningTask) GetDurationSeconds() int32 {
	if o == nil || o.DurationSeconds == nil {
		var ret int32
		return ret
	}
	return *o.DurationSeconds
}

// GetDurationSecondsOk returns a tuple with the DurationSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarathonMesosRunningTask) GetDurationSecondsOk() (*int32, bool) {
	if o == nil || o.DurationSeconds == nil {
		return nil, false
	}
	return o.DurationSeconds, true
}

// HasDurationSeconds returns a boolean if a field has been set.
func (o *MarathonMesosRunningTask) HasDurationSeconds() bool {
	if o != nil && o.DurationSeconds != nil {
		return true
	}

	return false
}

// SetDurationSeconds gets a reference to the given int32 and assigns it to the DurationSeconds field.
func (o *MarathonMesosRunningTask) SetDurationSeconds(v int32) {
	o.DurationSeconds = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *MarathonMesosRunningTask) GetHostname() string {
	if o == nil || o.Hostname == nil {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarathonMesosRunningTask) GetHostnameOk() (*string, bool) {
	if o == nil || o.Hostname == nil {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *MarathonMesosRunningTask) HasHostname() bool {
	if o != nil && o.Hostname != nil {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *MarathonMesosRunningTask) SetHostname(v string) {
	o.Hostname = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MarathonMesosRunningTask) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarathonMesosRunningTask) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MarathonMesosRunningTask) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MarathonMesosRunningTask) SetId(v string) {
	o.Id = &v
}

// GetMemLimit returns the MemLimit field value if set, zero value otherwise.
func (o *MarathonMesosRunningTask) GetMemLimit() IntegerAndError {
	if o == nil || o.MemLimit == nil {
		var ret IntegerAndError
		return ret
	}
	return *o.MemLimit
}

// GetMemLimitOk returns a tuple with the MemLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarathonMesosRunningTask) GetMemLimitOk() (*IntegerAndError, bool) {
	if o == nil || o.MemLimit == nil {
		return nil, false
	}
	return o.MemLimit, true
}

// HasMemLimit returns a boolean if a field has been set.
func (o *MarathonMesosRunningTask) HasMemLimit() bool {
	if o != nil && o.MemLimit != nil {
		return true
	}

	return false
}

// SetMemLimit gets a reference to the given IntegerAndError and assigns it to the MemLimit field.
func (o *MarathonMesosRunningTask) SetMemLimit(v IntegerAndError) {
	o.MemLimit = &v
}

// GetRss returns the Rss field value if set, zero value otherwise.
func (o *MarathonMesosRunningTask) GetRss() IntegerAndError {
	if o == nil || o.Rss == nil {
		var ret IntegerAndError
		return ret
	}
	return *o.Rss
}

// GetRssOk returns a tuple with the Rss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarathonMesosRunningTask) GetRssOk() (*IntegerAndError, bool) {
	if o == nil || o.Rss == nil {
		return nil, false
	}
	return o.Rss, true
}

// HasRss returns a boolean if a field has been set.
func (o *MarathonMesosRunningTask) HasRss() bool {
	if o != nil && o.Rss != nil {
		return true
	}

	return false
}

// SetRss gets a reference to the given IntegerAndError and assigns it to the Rss field.
func (o *MarathonMesosRunningTask) SetRss(v IntegerAndError) {
	o.Rss = &v
}

// GetTailLines returns the TailLines field value if set, zero value otherwise.
func (o *MarathonMesosRunningTask) GetTailLines() TaskTailLines {
	if o == nil || o.TailLines == nil {
		var ret TaskTailLines
		return ret
	}
	return *o.TailLines
}

// GetTailLinesOk returns a tuple with the TailLines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarathonMesosRunningTask) GetTailLinesOk() (*TaskTailLines, bool) {
	if o == nil || o.TailLines == nil {
		return nil, false
	}
	return o.TailLines, true
}

// HasTailLines returns a boolean if a field has been set.
func (o *MarathonMesosRunningTask) HasTailLines() bool {
	if o != nil && o.TailLines != nil {
		return true
	}

	return false
}

// SetTailLines gets a reference to the given TaskTailLines and assigns it to the TailLines field.
func (o *MarathonMesosRunningTask) SetTailLines(v TaskTailLines) {
	o.TailLines = &v
}

func (o MarathonMesosRunningTask) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CpuShares != nil {
		toSerialize["cpu_shares"] = o.CpuShares
	}
	if o.CpuUsedSeconds != nil {
		toSerialize["cpu_used_seconds"] = o.CpuUsedSeconds
	}
	if o.DeployedTimestamp != nil {
		toSerialize["deployed_timestamp"] = o.DeployedTimestamp
	}
	if o.DurationSeconds != nil {
		toSerialize["duration_seconds"] = o.DurationSeconds
	}
	if o.Hostname != nil {
		toSerialize["hostname"] = o.Hostname
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.MemLimit != nil {
		toSerialize["mem_limit"] = o.MemLimit
	}
	if o.Rss != nil {
		toSerialize["rss"] = o.Rss
	}
	if o.TailLines != nil {
		toSerialize["tail_lines"] = o.TailLines
	}
	return json.Marshal(toSerialize)
}

type NullableMarathonMesosRunningTask struct {
	value *MarathonMesosRunningTask
	isSet bool
}

func (v NullableMarathonMesosRunningTask) Get() *MarathonMesosRunningTask {
	return v.value
}

func (v *NullableMarathonMesosRunningTask) Set(val *MarathonMesosRunningTask) {
	v.value = val
	v.isSet = true
}

func (v NullableMarathonMesosRunningTask) IsSet() bool {
	return v.isSet
}

func (v *NullableMarathonMesosRunningTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarathonMesosRunningTask(val *MarathonMesosRunningTask) *NullableMarathonMesosRunningTask {
	return &NullableMarathonMesosRunningTask{value: val, isSet: true}
}

func (v NullableMarathonMesosRunningTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarathonMesosRunningTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


