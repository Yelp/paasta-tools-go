/*
 * Paasta API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package paastaapi

import (
	"encoding/json"
)

// DeployQueue Current state of the deployd queue
type DeployQueue struct {
	// Service instances that are ready to be acted on by deployd
	AvailableServiceInstances *[]DeployQueueServiceInstance `json:"available_service_instances,omitempty"`
	// Service instances that deployd is waiting to act on
	UnavailableServiceInstances *[]DeployQueueServiceInstance `json:"unavailable_service_instances,omitempty"`
}

// NewDeployQueue instantiates a new DeployQueue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployQueue() *DeployQueue {
	this := DeployQueue{}
	return &this
}

// NewDeployQueueWithDefaults instantiates a new DeployQueue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployQueueWithDefaults() *DeployQueue {
	this := DeployQueue{}
	return &this
}

// GetAvailableServiceInstances returns the AvailableServiceInstances field value if set, zero value otherwise.
func (o *DeployQueue) GetAvailableServiceInstances() []DeployQueueServiceInstance {
	if o == nil || o.AvailableServiceInstances == nil {
		var ret []DeployQueueServiceInstance
		return ret
	}
	return *o.AvailableServiceInstances
}

// GetAvailableServiceInstancesOk returns a tuple with the AvailableServiceInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployQueue) GetAvailableServiceInstancesOk() (*[]DeployQueueServiceInstance, bool) {
	if o == nil || o.AvailableServiceInstances == nil {
		return nil, false
	}
	return o.AvailableServiceInstances, true
}

// HasAvailableServiceInstances returns a boolean if a field has been set.
func (o *DeployQueue) HasAvailableServiceInstances() bool {
	if o != nil && o.AvailableServiceInstances != nil {
		return true
	}

	return false
}

// SetAvailableServiceInstances gets a reference to the given []DeployQueueServiceInstance and assigns it to the AvailableServiceInstances field.
func (o *DeployQueue) SetAvailableServiceInstances(v []DeployQueueServiceInstance) {
	o.AvailableServiceInstances = &v
}

// GetUnavailableServiceInstances returns the UnavailableServiceInstances field value if set, zero value otherwise.
func (o *DeployQueue) GetUnavailableServiceInstances() []DeployQueueServiceInstance {
	if o == nil || o.UnavailableServiceInstances == nil {
		var ret []DeployQueueServiceInstance
		return ret
	}
	return *o.UnavailableServiceInstances
}

// GetUnavailableServiceInstancesOk returns a tuple with the UnavailableServiceInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployQueue) GetUnavailableServiceInstancesOk() (*[]DeployQueueServiceInstance, bool) {
	if o == nil || o.UnavailableServiceInstances == nil {
		return nil, false
	}
	return o.UnavailableServiceInstances, true
}

// HasUnavailableServiceInstances returns a boolean if a field has been set.
func (o *DeployQueue) HasUnavailableServiceInstances() bool {
	if o != nil && o.UnavailableServiceInstances != nil {
		return true
	}

	return false
}

// SetUnavailableServiceInstances gets a reference to the given []DeployQueueServiceInstance and assigns it to the UnavailableServiceInstances field.
func (o *DeployQueue) SetUnavailableServiceInstances(v []DeployQueueServiceInstance) {
	o.UnavailableServiceInstances = &v
}

func (o DeployQueue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AvailableServiceInstances != nil {
		toSerialize["available_service_instances"] = o.AvailableServiceInstances
	}
	if o.UnavailableServiceInstances != nil {
		toSerialize["unavailable_service_instances"] = o.UnavailableServiceInstances
	}
	return json.Marshal(toSerialize)
}

type NullableDeployQueue struct {
	value *DeployQueue
	isSet bool
}

func (v NullableDeployQueue) Get() *DeployQueue {
	return v.value
}

func (v *NullableDeployQueue) Set(val *DeployQueue) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployQueue) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployQueue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployQueue(val *DeployQueue) *NullableDeployQueue {
	return &NullableDeployQueue{value: val, isSet: true}
}

func (v NullableDeployQueue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployQueue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


