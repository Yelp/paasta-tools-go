/*
 * Paasta API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package paastaapi

import (
	"encoding/json"
)

// DeployQueueServiceInstance An instance of a service in the deploy queue
type DeployQueueServiceInstance struct {
	// Desired timestamp by which the service instance should be bounced
	BounceBy *float32 `json:"bounce_by,omitempty"`
	// Timestamp at which service instance was first added to the queue
	BounceStartTime *float32 `json:"bounce_start_time,omitempty"`
	// Timestamp at which the service instance was last added to the queue
	EnqueueTime *float32 `json:"enqueue_time,omitempty"`
	// Number of times deployment actions have failed on this service instance
	Failures *int32 `json:"failures,omitempty"`
	// Name of the instance of the service
	Instance *string `json:"instance,omitempty"`
	// Number of times any deployment action has been taken on this service instance
	ProcessedCount *int32 `json:"processed_count,omitempty"`
	// Name of the service
	Service *string `json:"service,omitempty"`
	// Timestamp before which no action should be taken on this service instance
	WaitUntil *float32 `json:"wait_until,omitempty"`
	// The process that enqueued the task
	Watcher *string `json:"watcher,omitempty"`
}

// NewDeployQueueServiceInstance instantiates a new DeployQueueServiceInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployQueueServiceInstance() *DeployQueueServiceInstance {
	this := DeployQueueServiceInstance{}
	return &this
}

// NewDeployQueueServiceInstanceWithDefaults instantiates a new DeployQueueServiceInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployQueueServiceInstanceWithDefaults() *DeployQueueServiceInstance {
	this := DeployQueueServiceInstance{}
	return &this
}

// GetBounceBy returns the BounceBy field value if set, zero value otherwise.
func (o *DeployQueueServiceInstance) GetBounceBy() float32 {
	if o == nil || o.BounceBy == nil {
		var ret float32
		return ret
	}
	return *o.BounceBy
}

// GetBounceByOk returns a tuple with the BounceBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployQueueServiceInstance) GetBounceByOk() (*float32, bool) {
	if o == nil || o.BounceBy == nil {
		return nil, false
	}
	return o.BounceBy, true
}

// HasBounceBy returns a boolean if a field has been set.
func (o *DeployQueueServiceInstance) HasBounceBy() bool {
	if o != nil && o.BounceBy != nil {
		return true
	}

	return false
}

// SetBounceBy gets a reference to the given float32 and assigns it to the BounceBy field.
func (o *DeployQueueServiceInstance) SetBounceBy(v float32) {
	o.BounceBy = &v
}

// GetBounceStartTime returns the BounceStartTime field value if set, zero value otherwise.
func (o *DeployQueueServiceInstance) GetBounceStartTime() float32 {
	if o == nil || o.BounceStartTime == nil {
		var ret float32
		return ret
	}
	return *o.BounceStartTime
}

// GetBounceStartTimeOk returns a tuple with the BounceStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployQueueServiceInstance) GetBounceStartTimeOk() (*float32, bool) {
	if o == nil || o.BounceStartTime == nil {
		return nil, false
	}
	return o.BounceStartTime, true
}

// HasBounceStartTime returns a boolean if a field has been set.
func (o *DeployQueueServiceInstance) HasBounceStartTime() bool {
	if o != nil && o.BounceStartTime != nil {
		return true
	}

	return false
}

// SetBounceStartTime gets a reference to the given float32 and assigns it to the BounceStartTime field.
func (o *DeployQueueServiceInstance) SetBounceStartTime(v float32) {
	o.BounceStartTime = &v
}

// GetEnqueueTime returns the EnqueueTime field value if set, zero value otherwise.
func (o *DeployQueueServiceInstance) GetEnqueueTime() float32 {
	if o == nil || o.EnqueueTime == nil {
		var ret float32
		return ret
	}
	return *o.EnqueueTime
}

// GetEnqueueTimeOk returns a tuple with the EnqueueTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployQueueServiceInstance) GetEnqueueTimeOk() (*float32, bool) {
	if o == nil || o.EnqueueTime == nil {
		return nil, false
	}
	return o.EnqueueTime, true
}

// HasEnqueueTime returns a boolean if a field has been set.
func (o *DeployQueueServiceInstance) HasEnqueueTime() bool {
	if o != nil && o.EnqueueTime != nil {
		return true
	}

	return false
}

// SetEnqueueTime gets a reference to the given float32 and assigns it to the EnqueueTime field.
func (o *DeployQueueServiceInstance) SetEnqueueTime(v float32) {
	o.EnqueueTime = &v
}

// GetFailures returns the Failures field value if set, zero value otherwise.
func (o *DeployQueueServiceInstance) GetFailures() int32 {
	if o == nil || o.Failures == nil {
		var ret int32
		return ret
	}
	return *o.Failures
}

// GetFailuresOk returns a tuple with the Failures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployQueueServiceInstance) GetFailuresOk() (*int32, bool) {
	if o == nil || o.Failures == nil {
		return nil, false
	}
	return o.Failures, true
}

// HasFailures returns a boolean if a field has been set.
func (o *DeployQueueServiceInstance) HasFailures() bool {
	if o != nil && o.Failures != nil {
		return true
	}

	return false
}

// SetFailures gets a reference to the given int32 and assigns it to the Failures field.
func (o *DeployQueueServiceInstance) SetFailures(v int32) {
	o.Failures = &v
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *DeployQueueServiceInstance) GetInstance() string {
	if o == nil || o.Instance == nil {
		var ret string
		return ret
	}
	return *o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployQueueServiceInstance) GetInstanceOk() (*string, bool) {
	if o == nil || o.Instance == nil {
		return nil, false
	}
	return o.Instance, true
}

// HasInstance returns a boolean if a field has been set.
func (o *DeployQueueServiceInstance) HasInstance() bool {
	if o != nil && o.Instance != nil {
		return true
	}

	return false
}

// SetInstance gets a reference to the given string and assigns it to the Instance field.
func (o *DeployQueueServiceInstance) SetInstance(v string) {
	o.Instance = &v
}

// GetProcessedCount returns the ProcessedCount field value if set, zero value otherwise.
func (o *DeployQueueServiceInstance) GetProcessedCount() int32 {
	if o == nil || o.ProcessedCount == nil {
		var ret int32
		return ret
	}
	return *o.ProcessedCount
}

// GetProcessedCountOk returns a tuple with the ProcessedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployQueueServiceInstance) GetProcessedCountOk() (*int32, bool) {
	if o == nil || o.ProcessedCount == nil {
		return nil, false
	}
	return o.ProcessedCount, true
}

// HasProcessedCount returns a boolean if a field has been set.
func (o *DeployQueueServiceInstance) HasProcessedCount() bool {
	if o != nil && o.ProcessedCount != nil {
		return true
	}

	return false
}

// SetProcessedCount gets a reference to the given int32 and assigns it to the ProcessedCount field.
func (o *DeployQueueServiceInstance) SetProcessedCount(v int32) {
	o.ProcessedCount = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *DeployQueueServiceInstance) GetService() string {
	if o == nil || o.Service == nil {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployQueueServiceInstance) GetServiceOk() (*string, bool) {
	if o == nil || o.Service == nil {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *DeployQueueServiceInstance) HasService() bool {
	if o != nil && o.Service != nil {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *DeployQueueServiceInstance) SetService(v string) {
	o.Service = &v
}

// GetWaitUntil returns the WaitUntil field value if set, zero value otherwise.
func (o *DeployQueueServiceInstance) GetWaitUntil() float32 {
	if o == nil || o.WaitUntil == nil {
		var ret float32
		return ret
	}
	return *o.WaitUntil
}

// GetWaitUntilOk returns a tuple with the WaitUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployQueueServiceInstance) GetWaitUntilOk() (*float32, bool) {
	if o == nil || o.WaitUntil == nil {
		return nil, false
	}
	return o.WaitUntil, true
}

// HasWaitUntil returns a boolean if a field has been set.
func (o *DeployQueueServiceInstance) HasWaitUntil() bool {
	if o != nil && o.WaitUntil != nil {
		return true
	}

	return false
}

// SetWaitUntil gets a reference to the given float32 and assigns it to the WaitUntil field.
func (o *DeployQueueServiceInstance) SetWaitUntil(v float32) {
	o.WaitUntil = &v
}

// GetWatcher returns the Watcher field value if set, zero value otherwise.
func (o *DeployQueueServiceInstance) GetWatcher() string {
	if o == nil || o.Watcher == nil {
		var ret string
		return ret
	}
	return *o.Watcher
}

// GetWatcherOk returns a tuple with the Watcher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployQueueServiceInstance) GetWatcherOk() (*string, bool) {
	if o == nil || o.Watcher == nil {
		return nil, false
	}
	return o.Watcher, true
}

// HasWatcher returns a boolean if a field has been set.
func (o *DeployQueueServiceInstance) HasWatcher() bool {
	if o != nil && o.Watcher != nil {
		return true
	}

	return false
}

// SetWatcher gets a reference to the given string and assigns it to the Watcher field.
func (o *DeployQueueServiceInstance) SetWatcher(v string) {
	o.Watcher = &v
}

func (o DeployQueueServiceInstance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BounceBy != nil {
		toSerialize["bounce_by"] = o.BounceBy
	}
	if o.BounceStartTime != nil {
		toSerialize["bounce_start_time"] = o.BounceStartTime
	}
	if o.EnqueueTime != nil {
		toSerialize["enqueue_time"] = o.EnqueueTime
	}
	if o.Failures != nil {
		toSerialize["failures"] = o.Failures
	}
	if o.Instance != nil {
		toSerialize["instance"] = o.Instance
	}
	if o.ProcessedCount != nil {
		toSerialize["processed_count"] = o.ProcessedCount
	}
	if o.Service != nil {
		toSerialize["service"] = o.Service
	}
	if o.WaitUntil != nil {
		toSerialize["wait_until"] = o.WaitUntil
	}
	if o.Watcher != nil {
		toSerialize["watcher"] = o.Watcher
	}
	return json.Marshal(toSerialize)
}

type NullableDeployQueueServiceInstance struct {
	value *DeployQueueServiceInstance
	isSet bool
}

func (v NullableDeployQueueServiceInstance) Get() *DeployQueueServiceInstance {
	return v.value
}

func (v *NullableDeployQueueServiceInstance) Set(val *DeployQueueServiceInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployQueueServiceInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployQueueServiceInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployQueueServiceInstance(val *DeployQueueServiceInstance) *NullableDeployQueueServiceInstance {
	return &NullableDeployQueueServiceInstance{value: val, isSet: true}
}

func (v NullableDeployQueueServiceInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployQueueServiceInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


