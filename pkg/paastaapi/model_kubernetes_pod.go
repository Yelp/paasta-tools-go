/*
 * Paasta API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paastaapi

import (
	"encoding/json"
)

// KubernetesPod struct for KubernetesPod
type KubernetesPod struct {
	Containers *[]KubernetesContainer `json:"containers,omitempty"`
	// Time at which the pod was deployed
	DeployedTimestamp *float32 `json:"deployed_timestamp,omitempty"`
	// name of the pod's host
	Host NullableString `json:"host,omitempty"`
	// long message explaining the pod's state
	Message NullableString `json:"message,omitempty"`
	// name of the pod in Kubernetes
	Name *string `json:"name,omitempty"`
	// The status of the pod
	Phase NullableString `json:"phase,omitempty"`
	// Whether or not the pod is ready (i.e. all containers up)
	Ready *bool `json:"ready,omitempty"`
	// short message explaining the pod's state
	Reason NullableString `json:"reason,omitempty"`
	// Kubernetes pod events
	Events *[]KubernetesPodEvent `json:"events,omitempty"`
}

// NewKubernetesPod instantiates a new KubernetesPod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesPod() *KubernetesPod {
	this := KubernetesPod{}
	return &this
}

// NewKubernetesPodWithDefaults instantiates a new KubernetesPod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesPodWithDefaults() *KubernetesPod {
	this := KubernetesPod{}
	return &this
}

// GetContainers returns the Containers field value if set, zero value otherwise.
func (o *KubernetesPod) GetContainers() []KubernetesContainer {
	if o == nil || o.Containers == nil {
		var ret []KubernetesContainer
		return ret
	}
	return *o.Containers
}

// GetContainersOk returns a tuple with the Containers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesPod) GetContainersOk() (*[]KubernetesContainer, bool) {
	if o == nil || o.Containers == nil {
		return nil, false
	}
	return o.Containers, true
}

// HasContainers returns a boolean if a field has been set.
func (o *KubernetesPod) HasContainers() bool {
	if o != nil && o.Containers != nil {
		return true
	}

	return false
}

// SetContainers gets a reference to the given []KubernetesContainer and assigns it to the Containers field.
func (o *KubernetesPod) SetContainers(v []KubernetesContainer) {
	o.Containers = &v
}

// GetDeployedTimestamp returns the DeployedTimestamp field value if set, zero value otherwise.
func (o *KubernetesPod) GetDeployedTimestamp() float32 {
	if o == nil || o.DeployedTimestamp == nil {
		var ret float32
		return ret
	}
	return *o.DeployedTimestamp
}

// GetDeployedTimestampOk returns a tuple with the DeployedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesPod) GetDeployedTimestampOk() (*float32, bool) {
	if o == nil || o.DeployedTimestamp == nil {
		return nil, false
	}
	return o.DeployedTimestamp, true
}

// HasDeployedTimestamp returns a boolean if a field has been set.
func (o *KubernetesPod) HasDeployedTimestamp() bool {
	if o != nil && o.DeployedTimestamp != nil {
		return true
	}

	return false
}

// SetDeployedTimestamp gets a reference to the given float32 and assigns it to the DeployedTimestamp field.
func (o *KubernetesPod) SetDeployedTimestamp(v float32) {
	o.DeployedTimestamp = &v
}

// GetHost returns the Host field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KubernetesPod) GetHost() string {
	if o == nil || o.Host.Get() == nil {
		var ret string
		return ret
	}
	return *o.Host.Get()
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubernetesPod) GetHostOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Host.Get(), o.Host.IsSet()
}

// HasHost returns a boolean if a field has been set.
func (o *KubernetesPod) HasHost() bool {
	if o != nil && o.Host.IsSet() {
		return true
	}

	return false
}

// SetHost gets a reference to the given NullableString and assigns it to the Host field.
func (o *KubernetesPod) SetHost(v string) {
	o.Host.Set(&v)
}
// SetHostNil sets the value for Host to be an explicit nil
func (o *KubernetesPod) SetHostNil() {
	o.Host.Set(nil)
}

// UnsetHost ensures that no value is present for Host, not even an explicit nil
func (o *KubernetesPod) UnsetHost() {
	o.Host.Unset()
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KubernetesPod) GetMessage() string {
	if o == nil || o.Message.Get() == nil {
		var ret string
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubernetesPod) GetMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *KubernetesPod) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableString and assigns it to the Message field.
func (o *KubernetesPod) SetMessage(v string) {
	o.Message.Set(&v)
}
// SetMessageNil sets the value for Message to be an explicit nil
func (o *KubernetesPod) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *KubernetesPod) UnsetMessage() {
	o.Message.Unset()
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KubernetesPod) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesPod) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KubernetesPod) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KubernetesPod) SetName(v string) {
	o.Name = &v
}

// GetPhase returns the Phase field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KubernetesPod) GetPhase() string {
	if o == nil || o.Phase.Get() == nil {
		var ret string
		return ret
	}
	return *o.Phase.Get()
}

// GetPhaseOk returns a tuple with the Phase field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubernetesPod) GetPhaseOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Phase.Get(), o.Phase.IsSet()
}

// HasPhase returns a boolean if a field has been set.
func (o *KubernetesPod) HasPhase() bool {
	if o != nil && o.Phase.IsSet() {
		return true
	}

	return false
}

// SetPhase gets a reference to the given NullableString and assigns it to the Phase field.
func (o *KubernetesPod) SetPhase(v string) {
	o.Phase.Set(&v)
}
// SetPhaseNil sets the value for Phase to be an explicit nil
func (o *KubernetesPod) SetPhaseNil() {
	o.Phase.Set(nil)
}

// UnsetPhase ensures that no value is present for Phase, not even an explicit nil
func (o *KubernetesPod) UnsetPhase() {
	o.Phase.Unset()
}

// GetReady returns the Ready field value if set, zero value otherwise.
func (o *KubernetesPod) GetReady() bool {
	if o == nil || o.Ready == nil {
		var ret bool
		return ret
	}
	return *o.Ready
}

// GetReadyOk returns a tuple with the Ready field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesPod) GetReadyOk() (*bool, bool) {
	if o == nil || o.Ready == nil {
		return nil, false
	}
	return o.Ready, true
}

// HasReady returns a boolean if a field has been set.
func (o *KubernetesPod) HasReady() bool {
	if o != nil && o.Ready != nil {
		return true
	}

	return false
}

// SetReady gets a reference to the given bool and assigns it to the Ready field.
func (o *KubernetesPod) SetReady(v bool) {
	o.Ready = &v
}

// GetReason returns the Reason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KubernetesPod) GetReason() string {
	if o == nil || o.Reason.Get() == nil {
		var ret string
		return ret
	}
	return *o.Reason.Get()
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubernetesPod) GetReasonOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Reason.Get(), o.Reason.IsSet()
}

// HasReason returns a boolean if a field has been set.
func (o *KubernetesPod) HasReason() bool {
	if o != nil && o.Reason.IsSet() {
		return true
	}

	return false
}

// SetReason gets a reference to the given NullableString and assigns it to the Reason field.
func (o *KubernetesPod) SetReason(v string) {
	o.Reason.Set(&v)
}
// SetReasonNil sets the value for Reason to be an explicit nil
func (o *KubernetesPod) SetReasonNil() {
	o.Reason.Set(nil)
}

// UnsetReason ensures that no value is present for Reason, not even an explicit nil
func (o *KubernetesPod) UnsetReason() {
	o.Reason.Unset()
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *KubernetesPod) GetEvents() []KubernetesPodEvent {
	if o == nil || o.Events == nil {
		var ret []KubernetesPodEvent
		return ret
	}
	return *o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesPod) GetEventsOk() (*[]KubernetesPodEvent, bool) {
	if o == nil || o.Events == nil {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *KubernetesPod) HasEvents() bool {
	if o != nil && o.Events != nil {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []KubernetesPodEvent and assigns it to the Events field.
func (o *KubernetesPod) SetEvents(v []KubernetesPodEvent) {
	o.Events = &v
}

func (o KubernetesPod) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Containers != nil {
		toSerialize["containers"] = o.Containers
	}
	if o.DeployedTimestamp != nil {
		toSerialize["deployed_timestamp"] = o.DeployedTimestamp
	}
	if o.Host.IsSet() {
		toSerialize["host"] = o.Host.Get()
	}
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Phase.IsSet() {
		toSerialize["phase"] = o.Phase.Get()
	}
	if o.Ready != nil {
		toSerialize["ready"] = o.Ready
	}
	if o.Reason.IsSet() {
		toSerialize["reason"] = o.Reason.Get()
	}
	if o.Events != nil {
		toSerialize["events"] = o.Events
	}
	return json.Marshal(toSerialize)
}

type NullableKubernetesPod struct {
	value *KubernetesPod
	isSet bool
}

func (v NullableKubernetesPod) Get() *KubernetesPod {
	return v.value
}

func (v *NullableKubernetesPod) Set(val *KubernetesPod) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesPod) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesPod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesPod(val *KubernetesPod) *NullableKubernetesPod {
	return &NullableKubernetesPod{value: val, isSet: true}
}

func (v NullableKubernetesPod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesPod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


