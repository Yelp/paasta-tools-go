// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// ListServicesForClusterReader is a Reader for the ListServicesForCluster structure.
type ListServicesForClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListServicesForClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListServicesForClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListServicesForClusterOK creates a ListServicesForClusterOK with default headers values
func NewListServicesForClusterOK() *ListServicesForClusterOK {
	return &ListServicesForClusterOK{}
}

/*ListServicesForClusterOK handles this case with default header values.

Services and their instances on the current cluster
*/
type ListServicesForClusterOK struct {
	Payload *ListServicesForClusterOKBody
}

func (o *ListServicesForClusterOK) Error() string {
	return fmt.Sprintf("[GET /services][%d] listServicesForClusterOK  %+v", 200, o.Payload)
}

func (o *ListServicesForClusterOK) GetPayload() *ListServicesForClusterOKBody {
	return o.Payload
}

func (o *ListServicesForClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListServicesForClusterOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ListServicesForClusterOKBody list services for cluster o k body
swagger:model ListServicesForClusterOKBody
*/
type ListServicesForClusterOKBody struct {

	// services
	Services [][]interface{} `json:"services"`
}

// Validate validates this list services for cluster o k body
func (o *ListServicesForClusterOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListServicesForClusterOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListServicesForClusterOKBody) UnmarshalBinary(b []byte) error {
	var res ListServicesForClusterOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
