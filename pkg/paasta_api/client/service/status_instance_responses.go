// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/Yelp/paasta-tools-go/pkg/paasta_api/models"
)

// StatusInstanceReader is a Reader for the StatusInstance structure.
type StatusInstanceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StatusInstanceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStatusInstanceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewStatusInstanceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStatusInstanceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewStatusInstanceOK creates a StatusInstanceOK with default headers values
func NewStatusInstanceOK() *StatusInstanceOK {
	return &StatusInstanceOK{}
}

/*StatusInstanceOK handles this case with default header values.

Detailed status of an instance
*/
type StatusInstanceOK struct {
	Payload *models.InstanceStatus
}

func (o *StatusInstanceOK) Error() string {
	return fmt.Sprintf("[GET /services/{service}/{instance}/status][%d] statusInstanceOK  %+v", 200, o.Payload)
}

func (o *StatusInstanceOK) GetPayload() *models.InstanceStatus {
	return o.Payload
}

func (o *StatusInstanceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InstanceStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatusInstanceNotFound creates a StatusInstanceNotFound with default headers values
func NewStatusInstanceNotFound() *StatusInstanceNotFound {
	return &StatusInstanceNotFound{}
}

/*StatusInstanceNotFound handles this case with default header values.

Deployment key not found
*/
type StatusInstanceNotFound struct {
}

func (o *StatusInstanceNotFound) Error() string {
	return fmt.Sprintf("[GET /services/{service}/{instance}/status][%d] statusInstanceNotFound ", 404)
}

func (o *StatusInstanceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatusInstanceInternalServerError creates a StatusInstanceInternalServerError with default headers values
func NewStatusInstanceInternalServerError() *StatusInstanceInternalServerError {
	return &StatusInstanceInternalServerError{}
}

/*StatusInstanceInternalServerError handles this case with default header values.

Instance failure
*/
type StatusInstanceInternalServerError struct {
}

func (o *StatusInstanceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /services/{service}/{instance}/status][%d] statusInstanceInternalServerError ", 500)
}

func (o *StatusInstanceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
