// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewInstanceSetStateParams creates a new InstanceSetStateParams object
// with the default values initialized.
func NewInstanceSetStateParams() *InstanceSetStateParams {
	var ()
	return &InstanceSetStateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewInstanceSetStateParamsWithTimeout creates a new InstanceSetStateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewInstanceSetStateParamsWithTimeout(timeout time.Duration) *InstanceSetStateParams {
	var ()
	return &InstanceSetStateParams{

		timeout: timeout,
	}
}

// NewInstanceSetStateParamsWithContext creates a new InstanceSetStateParams object
// with the default values initialized, and the ability to set a context for a request
func NewInstanceSetStateParamsWithContext(ctx context.Context) *InstanceSetStateParams {
	var ()
	return &InstanceSetStateParams{

		Context: ctx,
	}
}

// NewInstanceSetStateParamsWithHTTPClient creates a new InstanceSetStateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewInstanceSetStateParamsWithHTTPClient(client *http.Client) *InstanceSetStateParams {
	var ()
	return &InstanceSetStateParams{
		HTTPClient: client,
	}
}

/*InstanceSetStateParams contains all the parameters to send to the API endpoint
for the instance set state operation typically these are written to a http.Request
*/
type InstanceSetStateParams struct {

	/*DesiredState
	  Desired state

	*/
	DesiredState string
	/*Instance
	  Instance name

	*/
	Instance string
	/*Service
	  Service name

	*/
	Service string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the instance set state params
func (o *InstanceSetStateParams) WithTimeout(timeout time.Duration) *InstanceSetStateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the instance set state params
func (o *InstanceSetStateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the instance set state params
func (o *InstanceSetStateParams) WithContext(ctx context.Context) *InstanceSetStateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the instance set state params
func (o *InstanceSetStateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the instance set state params
func (o *InstanceSetStateParams) WithHTTPClient(client *http.Client) *InstanceSetStateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the instance set state params
func (o *InstanceSetStateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDesiredState adds the desiredState to the instance set state params
func (o *InstanceSetStateParams) WithDesiredState(desiredState string) *InstanceSetStateParams {
	o.SetDesiredState(desiredState)
	return o
}

// SetDesiredState adds the desiredState to the instance set state params
func (o *InstanceSetStateParams) SetDesiredState(desiredState string) {
	o.DesiredState = desiredState
}

// WithInstance adds the instance to the instance set state params
func (o *InstanceSetStateParams) WithInstance(instance string) *InstanceSetStateParams {
	o.SetInstance(instance)
	return o
}

// SetInstance adds the instance to the instance set state params
func (o *InstanceSetStateParams) SetInstance(instance string) {
	o.Instance = instance
}

// WithService adds the service to the instance set state params
func (o *InstanceSetStateParams) WithService(service string) *InstanceSetStateParams {
	o.SetService(service)
	return o
}

// SetService adds the service to the instance set state params
func (o *InstanceSetStateParams) SetService(service string) {
	o.Service = service
}

// WriteToRequest writes these params to a swagger request
func (o *InstanceSetStateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param desired_state
	if err := r.SetPathParam("desired_state", o.DesiredState); err != nil {
		return err
	}

	// path param instance
	if err := r.SetPathParam("instance", o.Instance); err != nil {
		return err
	}

	// path param service
	if err := r.SetPathParam("service", o.Service); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
